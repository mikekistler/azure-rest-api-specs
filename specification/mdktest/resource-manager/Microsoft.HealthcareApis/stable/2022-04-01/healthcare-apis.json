{
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "openapi": "3.0.0",
  "info": {
    "version": "2022-04-01",
    "title": "HealthcareApisClient",
    "description": "Use this API to manage Microsoft HealthcareApis services in your Azure subscription."
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "components": {
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        }
      }
    },
    "schemas": {
      "ServicesProperties": {
        "description": "The properties of a service instance.",
        "type": "object",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state.",
            "$ref": "healthcare-apis.json#/components/schemas/ProvisioningState"
          },
          "accessPolicies": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceAccessPoliciesInfo",
            "description": "The access policies of the service instance."
          },
          "cosmosDbConfiguration": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceCosmosDbConfigurationInfo",
            "description": "The settings for the Cosmos DB database backing the service."
          },
          "authenticationConfiguration": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceAuthenticationConfigurationInfo",
            "description": "The authentication configuration for the service instance."
          },
          "corsConfiguration": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceCorsConfigurationInfo",
            "description": "The settings for the CORS configuration of the service instance."
          },
          "exportConfiguration": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceExportConfigurationInfo",
            "description": "The settings for the export operation of the service instance."
          },
          "privateEndpointConnections": {
            "description": "The list of private endpoint connections that are set up for this resource.",
            "type": "array",
            "items": {
              "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "publicNetworkAccess": {
            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "PublicNetworkAccess",
              "modelAsString": true
            }
          },
          "acrConfiguration": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceAcrConfigurationInfo",
            "description": "The azure container registry settings used for convert data operation of the service instance."
          }
        }
      },
      "ServiceAccessPoliciesInfo": {
        "description": "The access policies of the service instance.",
        "type": "array",
        "items": {
          "$ref": "healthcare-apis.json#/components/schemas/ServiceAccessPolicyEntry"
        }
      },
      "ServiceAccessPolicyEntry": {
        "description": "An access policy entry.",
        "properties": {
          "objectId": {
            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
            "type": "string",
            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
          }
        },
        "required": [
          "objectId"
        ]
      },
      "ServiceCosmosDbConfigurationInfo": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "type": "object",
        "properties": {
          "offerThroughput": {
            "type": "integer",
            "description": "The provisioned throughput for the backing database.",
            "readOnly": false,
            "minimum": 400,
            "maximum": 10000
          },
          "keyVaultKeyUri": {
            "type": "string",
            "description": "The URI of the customer-managed key for the backing database.",
            "readOnly": false
          }
        }
      },
      "ServiceAuthenticationConfigurationInfo": {
        "description": "Authentication configuration information",
        "type": "object",
        "properties": {
          "authority": {
            "type": "string",
            "description": "The authority url for the service",
            "readOnly": false
          },
          "audience": {
            "type": "string",
            "description": "The audience url for the service",
            "readOnly": false
          },
          "smartProxyEnabled": {
            "type": "boolean",
            "description": "If the SMART on FHIR proxy is enabled",
            "readOnly": false
          }
        }
      },
      "ServiceCorsConfigurationInfo": {
        "description": "The settings for the CORS configuration of the service instance.",
        "type": "object",
        "properties": {
          "origins": {
            "type": "array",
            "description": "The origins to be allowed via CORS.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/ServiceCorsConfigurationOriginEntry"
            }
          },
          "headers": {
            "type": "array",
            "description": "The headers to be allowed via CORS.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/ServiceCorsConfigurationHeaderEntry"
            }
          },
          "methods": {
            "type": "array",
            "description": "The methods to be allowed via CORS.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/ServiceCorsConfigurationMethodEntry"
            }
          },
          "maxAge": {
            "type": "integer",
            "description": "The max age to be allowed via CORS.",
            "readOnly": false,
            "minimum": 0,
            "maximum": 99999
          },
          "allowCredentials": {
            "type": "boolean",
            "description": "If credentials are allowed via CORS.",
            "readOnly": false
          }
        }
      },
      "ServiceExportConfigurationInfo": {
        "description": "Export operation configuration information",
        "type": "object",
        "properties": {
          "storageAccountName": {
            "type": "string",
            "description": "The name of the default export storage account.",
            "readOnly": false
          }
        }
      },
      "ServiceAcrConfigurationInfo": {
        "description": "Azure container registry configuration information",
        "type": "object",
        "properties": {
          "loginServers": {
            "type": "array",
            "description": "The list of the ACR login servers.",
            "readOnly": false,
            "items": {
              "type": "string"
            }
          },
          "ociArtifacts": {
            "type": "array",
            "description": "The list of Open Container Initiative (OCI) artifacts.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/ServiceOciArtifactEntry"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "ServiceCorsConfigurationOriginEntry": {
        "description": "An origin for CORS.",
        "type": "string",
        "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
      },
      "ServiceCorsConfigurationHeaderEntry": {
        "description": "A header for CORS.",
        "type": "string"
      },
      "ServiceCorsConfigurationMethodEntry": {
        "description": "A method for CORS.",
        "type": "string"
      },
      "ServicesDescription": {
        "description": "The description of the service.",
        "type": "object",
        "properties": {
          "properties": {
            "x-ms-client-flatten": false,
            "description": "The common properties of a service.",
            "$ref": "healthcare-apis.json#/components/schemas/ServicesProperties"
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "healthcare-apis.json#/components/schemas/systemData"
          }
        },
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServicesResource"
          }
        ]
      },
      "ServicesPatchDescription": {
        "description": "The description of the service.",
        "type": "object",
        "properties": {
          "tags": {
            "description": "Instance tags",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "properties": {
            "$ref": "healthcare-apis.json#/components/schemas/ServicesPropertiesUpdateParameters",
            "description": "The properties for updating a service instance.",
            "x-ms-client-flatten": true
          }
        }
      },
      "ServicesResource": {
        "description": "The common properties of a service.",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The resource identifier."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The resource name.",
            "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The resource type."
          },
          "kind": {
            "readOnly": false,
            "type": "string",
            "description": "The kind of the service.",
            "enum": [
              "fhir",
              "fhir-Stu3",
              "fhir-R4"
            ],
            "x-ms-enum": {
              "name": "kind",
              "modelAsString": false
            }
          },
          "location": {
            "type": "string",
            "description": "The resource location.",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags."
          },
          "etag": {
            "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
            "type": "string"
          },
          "identity": {
            "type": "object",
            "description": "Setting indicating whether the service has a managed identity associated with it.",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal ID of the resource identity."
              },
              "tenantId": {
                "readOnly": true,
                "type": "string",
                "description": "The tenant ID of the resource."
              },
              "type": {
                "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                "type": "string",
                "enum": [
                  "SystemAssigned",
                  "None"
                ],
                "x-ms-enum": {
                  "name": "ManagedServiceIdentityType",
                  "modelAsString": true
                }
              }
            }
          }
        },
        "x-ms-azure-resource": true,
        "required": [
          "location",
          "kind"
        ]
      },
      "ServicesDescriptionListResult": {
        "description": "A list of service description objects with a next link.",
        "type": "object",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of service description objects.",
            "type": "string"
          },
          "value": {
            "description": "A list of service description objects.",
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/ServicesDescription"
            }
          }
        }
      },
      "ServicesPropertiesUpdateParameters": {
        "description": "The properties for updating a service instance.",
        "type": "object",
        "properties": {
          "publicNetworkAccess": {
            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "PublicNetworkAccess",
              "modelAsString": true
            }
          }
        }
      },
      "CheckNameAvailabilityParameters": {
        "description": "Input values.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the service instance to check.",
            "type": "string"
          },
          "type": {
            "description": "The fully qualified resource type which includes provider namespace.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "ServicesNameAvailabilityInfo": {
        "description": "The properties indicating whether a given service name is available.",
        "type": "object",
        "properties": {
          "nameAvailable": {
            "description": "The value which indicates whether the provided name is available.",
            "type": "boolean",
            "readOnly": true
          },
          "reason": {
            "description": "The reason for unavailability.",
            "enum": [
              "Invalid",
              "AlreadyExists"
            ],
            "type": "string",
            "readOnly": true,
            "x-ms-enum": {
              "name": "ServiceNameUnavailabilityReason",
              "modelAsString": false
            }
          },
          "message": {
            "description": "The detailed reason message.",
            "type": "string"
          }
        }
      },
      "PrivateEndpointConnectionDescription": {
        "type": "object",
        "properties": {
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
          }
        },
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
          }
        ],
        "description": "The Private Endpoint Connection resource."
      },
      "PrivateLinkResourceDescription": {
        "type": "object",
        "properties": {
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
          }
        },
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateLinkResource"
          }
        ],
        "description": "The Private Endpoint Connection resource."
      },
      "PrivateEndpointConnectionListResultDescription": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "Array of private endpoint connections",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionDescription"
            }
          }
        },
        "description": "List of private endpoint connection associated with the specified storage account"
      },
      "PrivateLinkResourceListResultDescription": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "Array of private link resources",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/PrivateLinkResourceDescription"
            }
          }
        },
        "description": "A list of private link resources"
      },
      "Error": {
        "description": "Error details.",
        "type": "object",
        "properties": {
          "error": {
            "description": "Error details",
            "$ref": "healthcare-apis.json#/components/schemas/ErrorDetailsInternal"
          }
        }
      },
      "ErrorDetails": {
        "description": "Error details.",
        "type": "object",
        "properties": {
          "error": {
            "description": "Error details",
            "$ref": "healthcare-apis.json#/components/schemas/ErrorDetailsInternal"
          }
        }
      },
      "ErrorDetailsInternal": {
        "description": "Error details.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The error code.",
            "type": "string",
            "readOnly": true
          },
          "message": {
            "description": "The error message.",
            "type": "string",
            "readOnly": true
          },
          "target": {
            "description": "The target of the particular error.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ListOperations": {
        "description": "Available operations of the service",
        "type": "object",
        "properties": {
          "value": {
            "description": "Collection of available operation details",
            "uniqueItems": false,
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/OperationDetail"
            }
          },
          "nextLink": {
            "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
            "type": "string"
          }
        }
      },
      "OperationDetail": {
        "description": "Service REST API operation.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the operation",
            "type": "string",
            "readOnly": true
          },
          "isDataAction": {
            "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
            "type": "boolean",
            "readOnly": true
          },
          "display": {
            "$ref": "healthcare-apis.json#/components/schemas/OperationDisplay",
            "description": "Display of the operation"
          },
          "origin": {
            "readOnly": true,
            "type": "string",
            "description": "Default value is 'user,system'."
          },
          "actionType": {
            "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
            "type": "string",
            "readOnly": true,
            "enum": [
              "Internal"
            ],
            "x-ms-enum": {
              "name": "ActionType",
              "modelAsString": true
            }
          },
          "properties": {
            "$ref": "healthcare-apis.json#/components/schemas/OperationProperties",
            "description": "Properties of the operation"
          }
        }
      },
      "OperationDisplay": {
        "description": "The object that represents the operation.",
        "type": "object",
        "properties": {
          "provider": {
            "readOnly": true,
            "type": "string",
            "description": "Service provider: Microsoft.HealthcareApis"
          },
          "resource": {
            "readOnly": true,
            "type": "string",
            "description": "Resource Type: Services"
          },
          "operation": {
            "readOnly": true,
            "type": "string",
            "description": "Name of the operation"
          },
          "description": {
            "readOnly": true,
            "type": "string",
            "description": "Friendly description for the operation,"
          }
        }
      },
      "OperationResultsDescription": {
        "description": "The properties indicating the operation result of an operation on a service.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the operation returned.",
            "type": "string"
          },
          "name": {
            "description": "The name of the operation result.",
            "type": "string"
          },
          "location": {
            "description": "The location of the operation result.",
            "type": "string"
          },
          "status": {
            "description": "The status of the operation being performed.",
            "enum": [
              "Canceled",
              "Succeeded",
              "Failed",
              "Requested",
              "Running"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "OperationResultStatus",
              "modelAsString": true
            }
          },
          "startTime": {
            "description": "The time that the operation was started.",
            "type": "string"
          },
          "endTime": {
            "description": "The time that the operation finished.",
            "type": "string"
          },
          "properties": {
            "description": "Additional properties of the operation result.",
            "type": "object"
          }
        }
      },
      "OperationProperties": {
        "description": "Extra Operation properties",
        "type": "object",
        "properties": {
          "serviceSpecification": {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceSpecification",
            "description": "Service specifications of the operation"
          }
        }
      },
      "ServiceSpecification": {
        "description": "Service specification payload",
        "type": "object",
        "properties": {
          "logSpecifications": {
            "description": "Specifications of the Log for Azure Monitoring",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/LogSpecification"
            },
            "x-ms-identifiers": []
          },
          "metricSpecifications": {
            "description": "Specifications of the Metrics for Azure Monitoring",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/MetricSpecification"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "LogSpecification": {
        "description": "Specifications of the Log for Azure Monitoring",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the log",
            "type": "string"
          },
          "displayName": {
            "description": "Localized friendly display name of the log",
            "type": "string"
          },
          "blobDuration": {
            "description": "Blob duration of the log",
            "type": "string"
          }
        }
      },
      "MetricSpecification": {
        "description": "Specifications of the Metrics for Azure Monitoring",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the metric",
            "type": "string"
          },
          "displayName": {
            "description": "Localized friendly display name of the metric",
            "type": "string"
          },
          "displayDescription": {
            "description": "Localized friendly description of the metric",
            "type": "string"
          },
          "unit": {
            "description": "Unit that makes sense for the metric",
            "type": "string"
          },
          "category": {
            "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
            "type": "string"
          },
          "aggregationType": {
            "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
            "type": "string"
          },
          "supportedAggregationTypes": {
            "description": "Supported aggregation types",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportedTimeGrainTypes": {
            "description": "Supported time grain types",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fillGapWithZero": {
            "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
            "type": "boolean"
          },
          "dimensions": {
            "description": "Dimensions of the metric",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/MetricDimension"
            },
            "x-ms-identifiers": []
          },
          "sourceMdmNamespace": {
            "description": "Name of the MDM namespace. Optional.",
            "type": "string"
          }
        }
      },
      "MetricDimension": {
        "description": "Specifications of the Dimension of metrics",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the dimension",
            "type": "string"
          },
          "displayName": {
            "description": "Localized friendly display name of the dimension",
            "type": "string"
          },
          "toBeExportedForShoebox": {
            "description": "Whether this dimension should be included for the Shoebox export scenario",
            "type": "boolean"
          }
        }
      },
      "ProvisioningState": {
        "description": "The provisioning state.",
        "enum": [
          "Deleting",
          "Succeeded",
          "Creating",
          "Accepted",
          "Verifying",
          "Updating",
          "Failed",
          "Canceled",
          "Deprovisioned",
          "Moving",
          "Suspended",
          "Warned",
          "SystemMaintenance"
        ],
        "type": "string",
        "readOnly": true,
        "x-ms-enum": {
          "name": "provisioningState",
          "modelAsString": true
        }
      },
      "ResourceTags": {
        "type": "object",
        "description": "List of key value pairs that describe the resource. This will overwrite the existing tags.",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ],
            "description": "Resource tags."
          }
        }
      },
      "ResourceCore": {
        "type": "object",
        "description": "The common properties for any resource, tracked or proxy.",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The resource identifier."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The resource name.",
            "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The resource type."
          },
          "etag": {
            "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
            "type": "string"
          }
        },
        "x-ms-azure-resource": true
      },
      "LocationBasedResource": {
        "type": "object",
        "description": "The common properties for any location based resource, tracked or proxy.",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ResourceCore"
          }
        ],
        "properties": {
          "location": {
            "type": "string",
            "description": "The resource location.",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          }
        },
        "x-ms-azure-resource": true
      },
      "TaggedResource": {
        "type": "object",
        "description": "The common properties of tracked resources in the service.",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ResourceTags"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/LocationBasedResource"
          }
        ],
        "x-ms-azure-resource": true
      },
      "ServiceManagedIdentity": {
        "type": "object",
        "description": "Managed service identity (system assigned and/or user assigned identities)",
        "properties": {
          "identity": {
            "type": "object",
            "description": "Setting indicating whether the service has a managed identity associated with it.",
            "properties": {
              "type": {
                "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                "type": "string",
                "enum": [
                  "None",
                  "SystemAssigned",
                  "UserAssigned",
                  "SystemAssigned,UserAssigned"
                ],
                "x-ms-enum": {
                  "name": "ServiceManagedIdentityType",
                  "modelAsString": true
                }
              },
              "principalId": {
                "readOnly": true,
                "format": "uuid",
                "type": "string",
                "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
              },
              "tenantId": {
                "readOnly": true,
                "format": "uuid",
                "type": "string",
                "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
              },
              "userAssignedIdentities": {
                "$ref": "healthcare-apis.json#/components/schemas/UserAssignedIdentities"
              }
            },
            "required": [
              "type"
            ]
          }
        }
      },
      "UserAssignedIdentity": {
        "type": "object",
        "description": "User assigned identity properties",
        "properties": {
          "principalId": {
            "description": "The principal ID of the assigned identity.",
            "format": "uuid",
            "type": "string",
            "readOnly": true
          },
          "clientId": {
            "description": "The client ID of the assigned identity.",
            "format": "uuid",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "UserAssignedIdentities": {
        "title": "User-Assigned Identities",
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        "type": "object",
        "additionalProperties": {
          "$ref": "healthcare-apis.json#/components/schemas/UserAssignedIdentity"
        }
      },
      "Workspace": {
        "type": "object",
        "description": "Workspace resource.",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/TaggedResource"
          }
        ],
        "properties": {
          "properties": {
            "x-ms-client-flatten": false,
            "type": "object",
            "description": "Workspaces resource specific properties.",
            "x-ms-azure-resource": true,
            "properties": {
              "provisioningState": {
                "description": "The provisioning state.",
                "$ref": "healthcare-apis.json#/components/schemas/ProvisioningState"
              },
              "privateEndpointConnections": {
                "description": "The list of private endpoint connections that are set up for this resource.",
                "type": "array",
                "items": {
                  "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
                },
                "readOnly": true
              },
              "publicNetworkAccess": {
                "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
                "$ref": "healthcare-apis.json#/components/schemas/ResourcePublicNetworkAccess"
              }
            }
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "healthcare-apis.json#/components/schemas/systemData"
          }
        }
      },
      "WorkspacePatchResource": {
        "type": "object",
        "description": "Workspace patch properties",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ResourceTags"
          }
        ]
      },
      "WorkspaceList": {
        "description": "Collection of workspace object with a next link",
        "type": "object",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/Workspace"
            }
          }
        }
      },
      "DicomService": {
        "type": "object",
        "description": "The description of Dicom Service",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/TaggedResource"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceManagedIdentity"
          }
        ],
        "properties": {
          "properties": {
            "description": "Dicom Service configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/DicomServiceProperties",
            "x-ms-client-flatten": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "healthcare-apis.json#/components/schemas/systemData"
          }
        }
      },
      "DicomServicePatchResource": {
        "type": "object",
        "description": "Dicom Service patch properties",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ResourceTags"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceManagedIdentity"
          }
        ]
      },
      "DicomServiceCollection": {
        "description": "The collection of Dicom Services.",
        "type": "object",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of Dicom Services.",
            "type": "string"
          },
          "value": {
            "description": "The list of Dicom Services.",
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/DicomService"
            }
          }
        }
      },
      "DicomServiceProperties": {
        "description": "Dicom Service properties.",
        "type": "object",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state.",
            "$ref": "healthcare-apis.json#/components/schemas/ProvisioningState"
          },
          "authenticationConfiguration": {
            "description": "Dicom Service authentication configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/DicomServiceAuthenticationConfiguration"
          },
          "serviceUrl": {
            "description": "The url of the Dicom Services.",
            "type": "string",
            "readOnly": true
          },
          "privateEndpointConnections": {
            "description": "The list of private endpoint connections that are set up for this resource.",
            "type": "array",
            "items": {
              "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
            },
            "readOnly": true
          },
          "publicNetworkAccess": {
            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
            "$ref": "healthcare-apis.json#/components/schemas/ResourcePublicNetworkAccess"
          }
        }
      },
      "DicomServiceAuthenticationConfiguration": {
        "description": "Authentication configuration information",
        "type": "object",
        "properties": {
          "authority": {
            "type": "string",
            "description": "The authority url for the service",
            "readOnly": true
          },
          "audiences": {
            "type": "array",
            "description": "The audiences for the service",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/DicomAudience"
            },
            "readOnly": true
          }
        }
      },
      "DicomAudience": {
        "description": "The audience for Dicom Service",
        "type": "string",
        "readOnly": true
      },
      "IotConnector": {
        "type": "object",
        "description": "IoT Connector definition.",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/TaggedResource"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceManagedIdentity"
          }
        ],
        "properties": {
          "properties": {
            "description": "IoT Connector configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/IotConnectorProperties",
            "x-ms-client-flatten": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "healthcare-apis.json#/components/schemas/systemData"
          }
        }
      },
      "IotConnectorPatchResource": {
        "type": "object",
        "description": "Iot Connector patch properties",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ResourceTags"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceManagedIdentity"
          }
        ]
      },
      "IotConnectorCollection": {
        "description": "A collection of IoT Connectors.",
        "type": "object",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of IoT Connectors.",
            "type": "string"
          },
          "value": {
            "description": "The list of IoT Connectors.",
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/IotConnector"
            }
          }
        }
      },
      "IotConnectorProperties": {
        "description": "IoT Connector properties.",
        "type": "object",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state.",
            "$ref": "healthcare-apis.json#/components/schemas/ProvisioningState"
          },
          "ingestionEndpointConfiguration": {
            "description": "Source configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/IotEventHubIngestionEndpointConfiguration"
          },
          "deviceMapping": {
            "description": "Device Mappings.",
            "$ref": "healthcare-apis.json#/components/schemas/IotMappingProperties"
          }
        }
      },
      "IotEventHubIngestionEndpointConfiguration": {
        "type": "object",
        "properties": {
          "eventHubName": {
            "type": "string",
            "description": "Event Hub name to connect to."
          },
          "consumerGroup": {
            "type": "string",
            "description": "Consumer group of the event hub to connected to."
          },
          "fullyQualifiedEventHubNamespace": {
            "type": "string",
            "description": "Fully qualified namespace of the Event Hub to connect to."
          }
        },
        "description": "Event Hub ingestion endpoint configuration"
      },
      "IotMappingProperties": {
        "description": "The mapping content.",
        "type": "object",
        "properties": {
          "content": {
            "description": "The mapping.",
            "type": "object"
          }
        }
      },
      "IotIdentityResolutionType": {
        "description": "The type of IoT identity resolution to use with the destination.",
        "enum": [
          "Create",
          "Lookup"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "IotIdentityResolutionType",
          "modelAsString": true
        }
      },
      "IotDestinationProperties": {
        "type": "object",
        "description": "Common IoT Connector destination properties.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state.",
            "$ref": "healthcare-apis.json#/components/schemas/ProvisioningState",
            "x-ms-client-flatten": true
          }
        }
      },
      "IotFhirDestinationProperties": {
        "required": [
          "resourceIdentityResolutionType",
          "fhirServiceResourceId",
          "fhirMapping"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/IotDestinationProperties"
          }
        ],
        "description": "IoT Connector destination properties for an Azure FHIR service.",
        "properties": {
          "resourceIdentityResolutionType": {
            "description": "Determines how resource identity is resolved on the destination.",
            "$ref": "healthcare-apis.json#/components/schemas/IotIdentityResolutionType"
          },
          "fhirServiceResourceId": {
            "type": "string",
            "description": "Fully qualified resource id of the FHIR service to connect to."
          },
          "fhirMapping": {
            "description": "FHIR Mappings",
            "$ref": "healthcare-apis.json#/components/schemas/IotMappingProperties"
          }
        }
      },
      "IotFhirDestination": {
        "required": [
          "properties"
        ],
        "type": "object",
        "description": "IoT Connector FHIR destination definition.",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/LocationBasedResource"
          }
        ],
        "properties": {
          "properties": {
            "description": "IoT FHIR Destination settings.",
            "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestinationProperties",
            "x-ms-client-flatten": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "healthcare-apis.json#/components/schemas/systemData"
          }
        }
      },
      "IotFhirDestinationCollection": {
        "description": "A collection of IoT Connector FHIR destinations.",
        "type": "object",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of IoT FHIR destinations.",
            "type": "string"
          },
          "value": {
            "description": "The list of IoT Connector FHIR destinations.",
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestination"
            }
          }
        }
      },
      "FhirServiceCollection": {
        "description": "A collection of Fhir services.",
        "type": "object",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of Fhir Services.",
            "type": "string"
          },
          "value": {
            "description": "The list of Fhir Services.",
            "type": "array",
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/FhirService"
            }
          }
        }
      },
      "FhirService": {
        "type": "object",
        "description": "The description of Fhir Service",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/TaggedResource"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceManagedIdentity"
          }
        ],
        "properties": {
          "kind": {
            "readOnly": false,
            "type": "string",
            "description": "The kind of the service.",
            "enum": [
              "fhir-Stu3",
              "fhir-R4"
            ],
            "x-ms-enum": {
              "name": "fhirServiceKind",
              "modelAsString": true
            }
          },
          "properties": {
            "description": "Fhir Service configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirServiceProperties",
            "x-ms-client-flatten": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "$ref": "healthcare-apis.json#/components/schemas/systemData"
          }
        }
      },
      "FhirServicePatchResource": {
        "type": "object",
        "description": "FhirService patch properties",
        "allOf": [
          {
            "$ref": "healthcare-apis.json#/components/schemas/ResourceTags"
          },
          {
            "$ref": "healthcare-apis.json#/components/schemas/ServiceManagedIdentity"
          }
        ]
      },
      "FhirServiceProperties": {
        "description": "Fhir Service properties.",
        "type": "object",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state.",
            "$ref": "healthcare-apis.json#/components/schemas/ProvisioningState"
          },
          "accessPolicies": {
            "description": "Fhir Service access policies.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirServiceAccessPolicies"
          },
          "acrConfiguration": {
            "description": "Fhir Service Azure container registry configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirServiceAcrConfiguration"
          },
          "authenticationConfiguration": {
            "description": "Fhir Service authentication configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirServiceAuthenticationConfiguration"
          },
          "corsConfiguration": {
            "description": "Fhir Service Cors configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirServiceCorsConfiguration"
          },
          "exportConfiguration": {
            "description": "Fhir Service export configuration.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirServiceExportConfiguration"
          },
          "privateEndpointConnections": {
            "description": "The list of private endpoint connections that are set up for this resource.",
            "type": "array",
            "items": {
              "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
            },
            "readOnly": true
          },
          "publicNetworkAccess": {
            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
            "$ref": "healthcare-apis.json#/components/schemas/ResourcePublicNetworkAccess"
          },
          "eventState": {
            "description": "Fhir Service event support status.",
            "$ref": "healthcare-apis.json#/components/schemas/ResourceEventState"
          },
          "resourceVersionPolicyConfiguration": {
            "description": "Determines tracking of history for resources.",
            "$ref": "healthcare-apis.json#/components/schemas/ResourceVersionPolicyConfiguration"
          }
        }
      },
      "ResourceVersionPolicyConfiguration": {
        "description": "The settings for history tracking for FHIR resources.",
        "type": "object",
        "properties": {
          "default": {
            "description": "The default value for tracking history across all resources.",
            "$ref": "healthcare-apis.json#/components/schemas/FhirResourceVersionPolicy"
          },
          "resourceTypeOverrides": {
            "description": "A list of FHIR Resources and their version policy overrides.",
            "type": "object",
            "additionalProperties": {
              "$ref": "healthcare-apis.json#/components/schemas/FhirResourceVersionPolicy"
            }
          }
        }
      },
      "FhirResourceVersionPolicy": {
        "type": "string",
        "description": "Controls how resources are versioned on the FHIR service",
        "enum": [
          "no-version",
          "versioned",
          "versioned-update"
        ],
        "x-ms-enum": {
          "name": "FhirResourceVersionPolicy",
          "modelAsString": true
        }
      },
      "FhirServiceAccessPolicies": {
        "description": "The access policies of the service instance.",
        "type": "array",
        "items": {
          "$ref": "healthcare-apis.json#/components/schemas/FhirServiceAccessPolicyEntry"
        }
      },
      "FhirServiceAccessPolicyEntry": {
        "type": "object",
        "description": "An access policy entry.",
        "properties": {
          "objectId": {
            "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
            "type": "string",
            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
          }
        },
        "required": [
          "objectId"
        ]
      },
      "FhirServiceAcrConfiguration": {
        "description": "Azure container registry configuration information",
        "type": "object",
        "properties": {
          "loginServers": {
            "type": "array",
            "description": "The list of the Azure container registry login servers.",
            "readOnly": false,
            "items": {
              "type": "string"
            }
          },
          "ociArtifacts": {
            "type": "array",
            "description": "The list of Open Container Initiative (OCI) artifacts.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/ServiceOciArtifactEntry"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "FhirServiceAuthenticationConfiguration": {
        "description": "Authentication configuration information",
        "type": "object",
        "properties": {
          "authority": {
            "type": "string",
            "description": "The authority url for the service",
            "readOnly": false
          },
          "audience": {
            "type": "string",
            "description": "The audience url for the service",
            "readOnly": false
          },
          "smartProxyEnabled": {
            "type": "boolean",
            "description": "If the SMART on FHIR proxy is enabled",
            "readOnly": false
          }
        }
      },
      "FhirServiceCorsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "type": "object",
        "properties": {
          "origins": {
            "type": "array",
            "description": "The origins to be allowed via CORS.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/CorsConfigurationOriginEntry"
            }
          },
          "headers": {
            "type": "array",
            "description": "The headers to be allowed via CORS.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/CorsConfigurationHeaderEntry"
            }
          },
          "methods": {
            "type": "array",
            "description": "The methods to be allowed via CORS.",
            "readOnly": false,
            "items": {
              "$ref": "healthcare-apis.json#/components/schemas/CorsConfigurationMethodEntry"
            }
          },
          "maxAge": {
            "type": "integer",
            "format": "int32",
            "description": "The max age to be allowed via CORS.",
            "readOnly": false,
            "minimum": 0,
            "maximum": 99999
          },
          "allowCredentials": {
            "type": "boolean",
            "description": "If credentials are allowed via CORS.",
            "readOnly": false
          }
        }
      },
      "CorsConfigurationOriginEntry": {
        "description": "An origin for CORS.",
        "type": "string",
        "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
      },
      "CorsConfigurationHeaderEntry": {
        "description": "A header for CORS.",
        "type": "string"
      },
      "CorsConfigurationMethodEntry": {
        "description": "A method for CORS.",
        "type": "string"
      },
      "ServiceOciArtifactEntry": {
        "description": "An Open Container Initiative (OCI) artifact.",
        "type": "object",
        "properties": {
          "loginServer": {
            "description": "The Azure Container Registry login server.",
            "type": "string"
          },
          "imageName": {
            "description": "The artifact name.",
            "type": "string"
          },
          "digest": {
            "description": "The artifact digest.",
            "type": "string"
          }
        }
      },
      "FhirServiceExportConfiguration": {
        "description": "Export operation configuration information",
        "type": "object",
        "properties": {
          "storageAccountName": {
            "type": "string",
            "description": "The name of the default export storage account.",
            "readOnly": false
          }
        }
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "type": "object",
        "readOnly": true,
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "The identity that created the resource."
          },
          "createdByType": {
            "type": "string",
            "description": "The type of identity that created the resource.",
            "enum": [
              "User",
              "Application",
              "ManagedIdentity",
              "Key"
            ],
            "x-ms-enum": {
              "name": "createdByType",
              "modelAsString": true
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of resource creation (UTC)."
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The identity that last modified the resource."
          },
          "lastModifiedByType": {
            "type": "string",
            "description": "The type of identity that last modified the resource.",
            "enum": [
              "User",
              "Application",
              "ManagedIdentity",
              "Key"
            ],
            "x-ms-enum": {
              "name": "createdByType",
              "modelAsString": true
            }
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of resource last modification (UTC)"
          }
        }
      },
      "ResourcePublicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "enum": [
          "Enabled",
          "Disabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "PublicNetworkAccess",
          "modelAsString": true
        },
        "readOnly": true
      },
      "PrivateEndpointConnectionListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "Array of private endpoint connections",
            "items": {
              "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          }
        },
        "description": "List of private endpoint connection associated with the specified storage account"
      },
      "ResourceEventState": {
        "type": "string",
        "description": "Indicates the current status of event support for the resource.",
        "enum": [
          "Disabled",
          "Enabled",
          "Updating"
        ],
        "x-ms-enum": {
          "name": "ServiceEventState",
          "modelAsString": true
        },
        "readOnly": true
      }
    },
    "parameters": {
      "subscriptionId": {
        "name": "subscriptionId",
        "in": "path",
        "description": "The subscription identifier.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiVersion": {
        "name": "api-version",
        "in": "query",
        "description": "Client Api Version.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "resourceGroupName": {
        "name": "resourceGroupName",
        "in": "path",
        "description": "The name of the resource group that contains the service instance.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "minLength": 1,
          "maxLength": 90,
          "type": "string"
        }
      },
      "locationName": {
        "name": "locationName",
        "in": "path",
        "description": "The location of the operation.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "type": "string"
        }
      },
      "operationResultId": {
        "name": "operationResultId",
        "in": "path",
        "description": "The ID of the operation result to get.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "type": "string"
        }
      },
      "workspaceName": {
        "name": "workspaceName",
        "in": "path",
        "description": "The name of workspace resource.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "minLength": 3,
          "maxLength": 24,
          "type": "string"
        }
      },
      "dicomServiceName": {
        "name": "dicomServiceName",
        "in": "path",
        "description": "The name of DICOM Service resource.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "minLength": 3,
          "maxLength": 24,
          "type": "string"
        }
      },
      "iotConnectorName": {
        "name": "iotConnectorName",
        "in": "path",
        "description": "The name of IoT Connector resource.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "minLength": 3,
          "maxLength": 24,
          "type": "string"
        }
      },
      "fhirDestinationName": {
        "name": "fhirDestinationName",
        "in": "path",
        "description": "The name of IoT Connector FHIR destination resource.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "minLength": 3,
          "maxLength": 24,
          "type": "string"
        }
      },
      "fhirServiceName": {
        "name": "fhirServiceName",
        "in": "path",
        "description": "The name of FHIR Service resource.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "minLength": 3,
          "maxLength": 24,
          "type": "string"
        }
      },
      "resourceName": {
        "name": "resourceName",
        "in": "path",
        "description": "The name of the service instance.",
        "required": true,
        "x-ms-parameter-location": "method",
        "schema": {
          "minLength": 3,
          "maxLength": 24,
          "type": "string"
        }
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "description": "Client Api Version.",
        "required": true,
        "schema": {
          "type": "string"
        }      },
      "OperationIdParameter": {
        "name": "operationId",
        "in": "query",
        "description": "The operation id (name) for a long-running operation",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "description": "Get the metadata of a service instance.",
        "operationId": "Services_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all of the properties of the service instance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "default": {
            "description": "Default error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "description": "Create or update the metadata of a service instance.",
        "operationId": "Services_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          }
        ],
        "requestBody": {
          "description": "The service instance metadata.",
          "required": true,
          "x-ms-requestBody-name": "serviceDescription",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/ServicesDescription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is being updated; the operation will complete asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and a new resource was created; the operation will complete asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Resource"
        ],
        "description": "Update the metadata of a service instance.",
        "operationId": "Services_Update",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          }
        ],
        "requestBody": {
          "description": "The service instance metadata and security metadata.",
          "required": true,
          "x-ms-requestBody-name": "servicePatchDescription",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/ServicesPatchDescription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tags for the resource were updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "description": "Delete a service instance.",
        "operationId": "Services_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Delete request accepted; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "tags": [
          "Collection"
        ],
        "description": "Get all the service instances in a subscription.",
        "operationId": "Services_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the subscription.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesDescriptionListResult"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "tags": [
          "Collection"
        ],
        "description": "Get all the service instances in a resource group.",
        "operationId": "Services_ListByResourceGroup",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the resource group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesDescriptionListResult"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/checkNameAvailability": {
      "post": {
        "tags": [
          "Proxy"
        ],
        "description": "Check if a service instance name is available.",
        "operationId": "Services_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          }
        ],
        "requestBody": {
          "description": "Set the name parameter in the CheckNameAvailabilityParameters structure to the name of the service instance to check.",
          "required": true,
          "x-ms-requestBody-name": "checkNameAvailabilityInputs",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the service name is available. If the name is not available, the body contains the reason.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ServicesNameAvailabilityInfo"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByService",
        "description": "Lists all private endpoint connections for a service.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionListResultDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the service.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of the specified private endpoint connection associated with the service.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "requestBody": {
          "description": "The private endpoint connection properties.",
          "required": true,
          "x-ms-requestBody-name": "properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/definitions/PrivateEndpointConnection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "No Content - The private endpoint connection does not exist."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByService",
        "description": "Gets the private link resources that need to be created for a service.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateLinkResourceListResultDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "description": "Gets a private link resource that need to be created for a service.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/ApiVersionParameter"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateLinkResourceDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the workspaces in the subscription.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/WorkspaceList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the workspaces in the resource group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/WorkspaceList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified workspace.",
        "operationId": "Workspaces_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Workspace"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace resource with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for creating or updating a healthcare workspace.",
          "required": true,
          "x-ms-requestBody-name": "workspace",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/Workspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Workspace"
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Workspace"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "description": "Patch workspace details.",
        "operationId": "Workspaces_Update",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for updating a specified workspace.",
          "required": true,
          "x-ms-requestBody-name": "workspacePatchResource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/WorkspacePatchResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Workspace"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a specified workspace.",
        "operationId": "Workspaces_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/dicomservices": {
      "get": {
        "tags": [
          "DicomServices"
        ],
        "description": "Lists all DICOM Services for the given workspace",
        "operationId": "DicomServices_ListByWorkspace",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DICOM Services.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/DicomServiceCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/dicomservices/{dicomServiceName}": {
      "get": {
        "tags": [
          "DicomServices"
        ],
        "description": "Gets the properties of the specified DICOM Service.",
        "operationId": "DicomServices_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/dicomServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/DicomService"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DicomServices"
        ],
        "description": "Creates or updates a DICOM Service resource with the specified parameters.",
        "operationId": "DicomServices_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/dicomServiceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for creating or updating a Dicom Service resource.",
          "required": true,
          "x-ms-requestBody-name": "dicomservice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/DicomService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/DicomService"
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/DicomService"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DicomServices"
        ],
        "description": "Patch DICOM Service details.",
        "operationId": "DicomServices_Update",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/dicomServiceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for updating a Dicom Service.",
          "required": true,
          "x-ms-requestBody-name": "dicomservicePatchResource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/DicomServicePatchResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/DicomService"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DicomServices"
        ],
        "description": "Deletes a DICOM Service.",
        "operationId": "DicomServices_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/dicomServiceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Lists all IoT Connectors for the given workspace",
        "operationId": "IotConnectors_ListByWorkspace",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "List of IoT Connectors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotConnectorCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Gets the properties of the specified IoT Connector.",
        "operationId": "IotConnectors_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotConnector"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Creates or updates an IoT Connector resource with the specified parameters.",
        "operationId": "IotConnectors_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          }
        ],
        "requestBody": {
          "description": "The parameters for creating or updating an IoT Connectors resource.",
          "required": true,
          "x-ms-requestBody-name": "iotConnector",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/IotConnector"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotConnector"
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotConnector"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Patch an IoT Connector.",
        "operationId": "IotConnectors_Update",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for updating an IoT Connector.",
          "required": true,
          "x-ms-requestBody-name": "iotConnectorPatchResource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/IotConnectorPatchResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotConnector"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Deletes an IoT Connector.",
        "operationId": "IotConnectors_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}/fhirdestinations": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Lists all FHIR destinations for the given IoT Connector",
        "operationId": "FhirDestinations_ListByIotConnector",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          }
        ],
        "responses": {
          "200": {
            "description": "List of IoT Connector FHIR destinations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestinationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}/fhirdestinations/{fhirDestinationName}": {
      "get": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Gets the properties of the specified Iot Connector FHIR destination.",
        "operationId": "IotConnectorFhirDestination_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirDestinationName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestination"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Creates or updates an IoT Connector FHIR destination resource with the specified parameters.",
        "operationId": "IotConnectorFhirDestination_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirDestinationName"
          }
        ],
        "requestBody": {
          "description": "The parameters for creating or updating an IoT Connector FHIR destination resource.",
          "required": true,
          "x-ms-requestBody-name": "iotFhirDestination",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestination"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestination"
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/IotFhirDestination"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IotConnectors"
        ],
        "description": "Deletes an IoT Connector FHIR destination.",
        "operationId": "IotConnectorFhirDestination_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/iotConnectorName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirDestinationName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/fhirservices": {
      "get": {
        "tags": [
          "FhirServices"
        ],
        "description": "Lists all FHIR Services for the given workspace",
        "operationId": "FhirServices_ListByWorkspace",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "List of FHIR Services.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/FhirServiceCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/fhirservices/{fhirServiceName}": {
      "get": {
        "tags": [
          "FhirServices"
        ],
        "description": "Gets the properties of the specified FHIR Service.",
        "operationId": "FhirServices_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/FhirService"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FhirServices"
        ],
        "description": "Creates or updates a FHIR Service resource with the specified parameters.",
        "operationId": "FhirServices_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirServiceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for creating or updating a Fhir Service resource.",
          "required": true,
          "x-ms-requestBody-name": "fhirservice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/FhirService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Put request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/FhirService"
                }
              }
            }
          },
          "201": {
            "description": "Created - Put request accepted and an existing resource is being created asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/FhirService"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Put request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FhirServices"
        ],
        "description": "Patch FHIR Service details.",
        "operationId": "FhirServices_Update",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirServiceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "requestBody": {
          "description": "The parameters for updating a Fhir Service.",
          "required": true,
          "x-ms-requestBody-name": "fhirservicePatchResource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/FhirServicePatchResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated - Patch request accepted and an existing resource is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/FhirService"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Patch request accepted and an existing resource is being updated asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FhirServices"
        ],
        "description": "Deletes a FHIR Service.",
        "operationId": "FhirServices_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/fhirServiceName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted."
          },
          "202": {
            "description": "Delete request accepted; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "WorkspacePrivateEndpointConnections_ListByWorkspace",
        "description": "Lists all private endpoint connections for a workspace.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionListResultDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "WorkspacePrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "WorkspacePrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of the specified private endpoint connection associated with the workspace.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "requestBody": {
          "description": "The private endpoint connection properties.",
          "required": true,
          "x-ms-requestBody-name": "properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionDescription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateEndpointConnectionDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "WorkspacePrivateEndpointConnections_Delete",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Absolute URL to poll for operation results",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "links": {
              "result": {
                "description": "Link to obtain operation result",
                "operationId": "OperationResults_Get",
                "parameters": {
                  "locationName": "$response.body.location",
                  "operationResultId": "$response.body.name"
                }
              }
            }
          },
          "204": {
            "description": "No Content - The private endpoint connection does not exist."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "WorkspacePrivateLinkResources_ListByWorkspace",
        "description": "Gets the private link resources that need to be created for a workspace.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateLinkResourceListResultDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "WorkspacePrivateLinkResources_Get",
        "description": "Gets a private link resource that need to be created for a workspace.",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/workspaceName"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/PrivateLinkResourceDescription"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.HealthcareApis/operations": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "description": "Lists all of the available operations supported by Microsoft Healthcare resource provider.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ListOperations"
                }
              }
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/locations/{locationName}/operationresults/{operationResultId}": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "description": "Get the operation result for a long running operation.",
        "operationId": "OperationResults_Get",
        "parameters": [
          {
            "$ref": "healthcare-apis.json#/components/parameters/apiVersion"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/subscriptionId"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/locationName"
          },
          {
            "$ref": "healthcare-apis.json#/components/parameters/operationResultId"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all of the properties of the operation result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/OperationResultsDescription"
                }
              }
            }
          },
          "default": {
            "description": "Default error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "healthcare-apis.json#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    }
  }
}
